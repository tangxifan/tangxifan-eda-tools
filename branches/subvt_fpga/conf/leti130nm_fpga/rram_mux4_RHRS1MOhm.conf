# Sample configuration file for dff_elc
[general_settings]
spice_dir = spice/ # directory name where simulation results are saved
process_tech = /research/ece/lnis/USERS/tang/github/tangxifan-eda-tools/branches/subvt_fpga/process/leti130nm/corners # Location of Techonlogy model file
process_type = TT # Industrial Library should specify the type, [TT|FF|..]
finfet_tech = off # Specify if this is a FinFET technology
verilogA_hspice_sim = off # Valid for simulations that include VerilogA models
verilogA_hdl_path = /uusoc/facility/cad_common/Synopsys/hspice_vM-2017.03/hspice/include # HDL path containing header files for VerilogA simulation
verilogA_cshrc_path = /uusoc/facility/cad_common/Synopsys/hspice_vM-2017.03/hspice/bin/cshrc.meta # Initialization script for VerilogA simulation
trans_model_ref = X # Specify the type of transistor model, regular: M or subckt: X
time_unit = 1ns       # unit of time in library file
voltage_unit = 1V     # unit of voltage in library file
leakage_power_unit = 1nW # unit of leakage power in library file
capacitive_load_unit = 1pf # unit of capacitive load in library file
slew_upper_threshold_pct_rise = 0.9 # Up threshold percentage in rising slew (measure slew)
slew_lower_threshold_pct_rise = 0.1 # low threshold percentage in rising slew (measure slew)
slew_upper_threshold_pct_fall = 0.1 # Up threshold percentage in falling slew (measure slew)
slew_lower_threshold_pct_fall = 0.9 # low threshold percentage in falling slew (measure slew)
input_threshold_pct_rise = 0.5 # threshold percentage of input rising (measure delay)
input_threshold_pct_fall = 0.5 # threshold percentage of input falling (measure delay)
output_threshold_pct_rise = 0.5 # threshold percentage of output rising (measure delay)
output_threshold_pct_fall = 0.5 # threshold percentage of output falling (measure delay)
temperature = 25 # 25 degree, normal working temperature
VDD_port_name = vdd # port name of VDD in global
GND_port_name = gnd # port name of GND in global
LOAD_VDD_port_name = vdd_load # port name of LOAD VDD in global
vsp_sweep = 0.9,0.9,0.2 # Sweep Vsp from [lowest_vsp,highest_vsp,step]
#vsp_sweep = 0.4,1.0,0.1 # Sweep Vsp from [lowest_vsp,highest_vsp,step]
# Slew for DFF, LUT and MUX
clk_slew = 100p # [s] Clock slew valid for both rising and falling
input_slew = 300p # [s] Input slew valid for both rising and falling
# MOS Subckt NAME : 
# NMOS subckt should be defined as .subckt drain gate source bulk <nmos_name> L=<nl> W=<min_wn>
nmos_name = EN1V8_BS3JU # Name of nmos subckt
pmos_name = EP1V8_BS3JU # Name of nmos subckt
nl = 0.35e-6 # channel length
pl = 0.35e-6 # channel length of PMOS
min_wn = 0.5e-6 # minimum width of NMOS
min_wp = 0.5e-6 # minimum width of NMOS
pn_ratio = 1.5 # wp/wn
vthn = 0.2
vthp = 0.4
std_vdd = 0.9
w_power_gate_trans = 10

[dff_settings] 
# IMPORTANT: vsp,slew,clk_pwl,clk_pwh,clk2d,thold are reserved words. Avoid use them.
#            DFF subckt should be defined as <dff_subckt_name> <D> <CLK> <Q> <SET> <RESET>
#dff_sp = tig_tspc.sp # Sub Circuit definition file
dff_subckt_name = static_dff # name of DFF subckt
D_port_name = D      # port name of D in DFF subckt
CLK_port_name = CLK  # port name of CLK in DFF subckt
RST_port_name = R    # port name of Reset in DFF subckt
SET_port_name = S    # port name of Set in DFF subckt
Q_port_name = Q      # port name of Q in DFF subckt
bisec = 3n,-3n,100p # binary search settings(for setup and hold time): [initial_pass],[initial_fail],[step] binary search stops when size of searching range shrinks to less than "step"
delay_tolerance = 0.1 # [percent] Tolerance than delay in setup/hold should not exceed this percentage.
load_type = inv # Specify the type of load
load_cap = 1.53f # [F] load capacitance in test bench
load_inv_size = 1 # Size of a load inverter
load_inv_num = 1 # Number of load inverters

[lut_settings]
# LUT sub circuit should be defined as <LUT_NAME> <SRAM_PORTS> <INPUT_PORTS> <OUTPUT_PORT>
#lut_subckt_name = lut5
lut_subckt_name = lut6
IN_port_prefix = in # prefix of INPUT of LUT, the format should be IN_port_prefix+index
OUT_port_name = out
SRAM_port_prefix = sram # Similar to IN_port_prefix
#SRAM_bits = 1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0 # SRAM bits, size should match 2^lut_size
#SRAM_bits = 1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0 # SRAM bits, size should match 2^lut_size
SRAM_bits = 1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0 # SRAM bits, size should match 2^lut_size
input_vectors = r,r,r,r,r,r # r - rise, 0 - gnd , 1 - vsp, f -fall, LUT inputs
#input_vectors = r,r,r,r,r # r - rise, 0 - gnd , 1 - vsp, f -fall, LUT inputs
load_type = inv # Specify the type of load
load_cap = 1.53f # [F] load capacitance in test bench
load_inv_size = 1 # Size of a load inverter
load_inv_num = 2 # Number of load inverters

[mux_settings]
# 2-input MUX sub circuit should be defined as <MUX_NAME> <INPUT_PORTS> <SRAM_PORT> <invert_SRAM_port> <OUTPUT_PORT>
mux_subckt_name = mux2to1
#mux_subckt_name = mux2to1_rram
IN_port_prefix = in # prefix of INPUT of MUX, the format should be IN_port_prefix+index
OUT_port_name = out
SRAM_port_prefix = sel # Similar to IN_port_prefix
invert_SRAM_port_prefix = sel_inv # Similar to IN_port_prefix, this is invert out of SRAM
input_vectors = r,r # r - rise, 0 - gnd , 1 - vsp, f -fall, MUX inputs
SRAM_bits = 1 # SRAM bits, size should match the size of MUX, but it is the non-inverted SRAM bits.
#input_vectors = r,r,r,r # r - rise, 0 - gnd , 1 - vsp, f -fall, MUX inputs
#SRAM_bits = 1,1 # SRAM bits, size should match the size of MUX, but it is the non-inverted SRAM bits.
#input_vectors = r,r,r,r,r,r,r,r,r,r,r,r,r,r,r,r,r,r,r,r,r,r # r - rise, 0 - gnd , 1 - vsp, f -fall, MUX inputs
#SRAM_bits = 1,1,1,1,1 # SRAM bits, size should match the size of MUX, but it is the non-inverted SRAM bits.
inv_size_in = 1
inv_size_out = 1
load_type = inv # Specify the type of load
load_cap = 1.53f # [F] load capacitance in test bench
load_inv_size = 1 # Size of a load inverter
load_inv_num = 1 # Number of load inverters
worst_delay = 1 # Test the worst delay(second input to output) of MUX. Set "1" as enabled
w_cpt = 1 # Width of transmission-gates 
w_cpt_step = 1 # Step in sweeping the size of transmission-gates
cap_in_wire = 0.1a # Wire capacitance between the output of input inverters and the inputs of multiplexing structure
cap_out_wire = 0.1a # Wire capacitance between the output of multiplexing structure and the input of output inverters

[inv_settings]
# Inverter sub circuit should be defined as <INV_NAME> <INPUT_PORT> <OUT_PORT> <LOCAL_VDD> <LOCAL_GND> size=1
inv_subckt_name = inv
IN_port_name = in
OUT_port_name = out
local_vdd_name = svdd
local_gnd_name = sgnd

[rram_settings]
Wprog = 1 # Minimum width NMOS transistor, should be larger than 1.
Wprog_step = 0.1 # Step in Sweeping Wprog when option wprog_sweep is enabled
Vprog = 1.2 # [V] Programming Voltage of RRAM
Vprog_step = 0.1 # [V] Step in Sweeping Programming Voltage of RRAM
Ids = 220u # [A] Drive current of minimum width NMOS transistor
Vprog_slack = 0.2 # Vprog should be at (1+slack)*Vdd
Rmin = 6k # [Ohm] equivalent resistance of transistor when it is open.
Coff_nmos = 46a # [F] Capacitance of drain or source when NMOS is off
Cs_pmos = 74.34a # [F] Capacitance of source when PMOS is open
Cs_nmos = 74.34a # [F] Capacitance of source when NMOS is open
Cg_pmos = 107.32a # [F] Capacitance of gate when PMOS is open
Cg_nmos = 107.32 # [F] Capacitance of gate when NMOS is open
Vdd_std = 1.2 # [V] standard VDD
pn_ratio = 1.5 # ratio of Wpmos/Wnmos
ron_upbound = 7k # [Ohm] upbound of Ron of RRAM
ron_lowbound = 1k # [Ohm] lowbound of Ron of RRAM
fix_vprog = 0 # fix the programming voltage
roff = 1Meg # [Ohm] Off state resistance of RRAM
rram_verilogA_model_path = /research/ece/lnis/USERS/tang/github/tangxifan-eda-tools/branches/subvt_fpga/process/rram_models/rram_v_1_0_0_fit_130nm_1p1V_HRS1MOhm.va # Path of RRAM VerilogA models 
rram_subckt_name = rram_v_1_0_0 # subckt name of RRAM verilogA model
rram_initial_params = model_switch:0,gap_ini:17e-10,deltaGap0:0.02 # RRAM verilogA model initial parameters
rram_vth = 1.0 # [V] threshold voltage of RRAM
Vdd_prog = 1.5 # [V] programming transistor nominal voltage 
Tprog = 100n # [Second] Pulse width for programming a RRAM
Vdd_break = 1.8 # [V] programming transistor breakdown voltage
prog_nmos_name = EN1V8_BS3JU # transistor model name of the n-type programming transistors 
prog_pmos_name = EP1V8_BS3JU # transistor model name of the p-type programming transistors 
prog_nl = 350n # Channel width of n-type programming transistor
prog_pl = 350n # Channel width of p-type programming transistor
prog_min_wn = 500n # Width of n-type programming transistor
prog_min_wp = 500n # Width of p-type programming transistor
prog_pn_ratio = 1.5 # p/n ratio of programming transistors 
prog_trans_model_ref = X # Specify the type of transistor model, regular: M or subckt: X
rram_initial_on_gap = gap_ini:1e-10 # The gap value used to set a RRAM Verilog-A model into on state
rram_initial_off_gap = gap_ini:17e-10 # The gap value used to set a RRAM Verilog-A model into on state
prog_process_tech = /research/ece/lnis/USERS/tang/github/tangxifan-eda-tools/branches/subvt_fpga/process/tsmc40nm/toplevel.l # For programming transistors: Location of Techonlogy model file
prog_process_type = TOP_TT # For programming transistors: Industrial Library should specify the type, [TT|FF|..]
gap_keyword = CurrentGap # A keyword defined in the RRAM Verilog-A model for gap printout
C_RRAM = 0a # Parasitic capacitance of a RRAM device 



